import React from "react";
import styles from "./page.module.css";
import Image from "next/image";
import { notFound } from "next/navigation";

async function getData(id) {
  const res = await fetch(`http://localhost:3000/api/posts/${id}`, {
    cache: "no-store",
  });

  if (!res.ok) {
    return notFound()
  }

  return res.json();
}


export async function generateMetadata({ params }) {

  const post = await getData(params.id)
  return {
    title: post.title,
    description: post.desc,
  };
}

const BlogPost = async ({ params }) => {
  const data = await getData(params.id);
  return (
    <div className={styles.container}>
      <div className={styles.top}>
        <div className={styles.info}>
          <h1 className={styles.title}>{data.title}</h1>
          <p className={styles.desc}>
            {data.desc}
          </p>
          <div className={styles.author}>
            <Image
              src={data.img}
              alt=""
              width={40}
              height={40}
              className={styles.avatar}
            />
            <span className={styles.username}>{data.username}</span>
          </div>
        </div>
        <div className={styles.imageContainer}>
          <Image
            src={data.img}
            alt=""
            fill={true}
            className={styles.image}
          />
        </div>
      </div>
      <div className={styles.content}>
        <p className={styles.text}>
         {data.content}
        </p>
      </div>
    </div>
  );
};

export default BlogPost;






//  Код нь React болон загварын хүснэгтийг импортлох замаар эхэлдэг.Дараа нь "дараагийн/зураг"-аас Зургийг, "дараагийн/навигац"-аас notFound-ээс импортлодог.getData функц нь аргумент хэлбэрээр дамжуулагдсан тодорхой нийтлэлийн өгөгдлийг татахад ашиглагддаг.Хэрэв өгөгдөл олдохгүй бол notFound()-г буцаана.Код нь тодорхой нийтлэлийн өгөгдлийг дуудах явдал юм.Дээрх код нь тухайн нийтлэлийн өгөгдлийг татаж авдаг.Хэрэв серверээс хариу ирээгүй бол үр дүн болгон notFound()-г буцаана.Код нь синхрончлол үүсгэхMetadata функцийг импортлох замаар эхэлдэг. Энэ нь параметрийн объектыг авч блог нийтлэлийн мета өгөгдөл бүхий объектыг буцаадаг функц юм.Дараа нь код нь энэ функцийг дуудаж, өгөгдлийн сангаас тодорхой блог нийтлэлийн ID-д зориулж өгөгдөл авах бөгөөд үүнийг params.id болгон дамжуулах болно.Энэ дуудлагын буцах утгыг өгөгдөлд хадгалдаг бөгөөд үүнийг дараа нь CSS ангиллын дээд хэсэг, дотор нь контейнер бүхий div элемент үүсгэхэд ашиглах болно.Энэ div нь хоёр хүүхэдтэй: нэг нь тайлбар, нөгөө нь гарчиг гэж нэрлэгддэг бөгөөд хоёулаа className="description" эсвэл "title" гэх мэт HTML шинж чанаруудыг ашиглан тохируулсан.Эхний хүүхдийг params параметр дээр getData(params) гэж дуудаж (энэ нь GeneratMetadata руу дамжуулагдсан) үүсгэгдэнэ.Энэ дуудлага нь асинхрон амлалтыг буцаадаг бөгөөд энэ нь таныг блогийн нийтлэлийн өгөгдлийн талаар шаардлагатай бүх мэдээлэлд (энэ тохиолдолд зөвхөн түүний id) хандах боломжтой болсон үед шийдэгддэг.Ийм зүйл тохиолдоход бид програмынхаа бусад хэсэгт орохын өмнө мэдээллээ авч дуустал хүлээхийн тулд үүн дээр await ашиглаж болно; тэгэхгүй бол оролдох/барьж авах гэх мэт зүйл хийх хэрэгтэй байсан.Код нь блог нийтлэлийн мета өгөгдлийг үүсгэдэг функц юм.Асинхрончлолгүй функц нь getData(params.id)-ийн үр дүнг буцаадаг бөгөөд энэ нь шинж чанарын гарчиг болон тайлбар бүхий объект хэлбэрээр байх болно. Код нь байнадотор нь h1 ба p тэмдэгтэй тэмдэглэнэ.h1 нь "Гарчиг" гэсэн бичвэртэй, p нь "Тодорхойлолт" гэсэн бичвэртэй.Мөн зарим текст агуулсан alt шинж чанар бүхий 40 пикселийн  

// өргөн, 40 пиксел өндөртэй Зураг агуулсан div байдаг.Энэ зургийн дотор хоёр зай байна: нэг нь хэрэглэгчийн нэр, нөгөө нь зохиогчийн нэр.Код нь {data} гэж эхэлдэг бөгөөд энэ нь бид энэ хуудсыг үүсгэхийн тулд өөрийн аппын өгөгдлийг ашиглаж байна гэсэн үг юм.Дараа нь бидний CSS файлд (styles.css) тодорхойлсон загварууд байна.Дараа нь title="{data.title}" гарч ирдэг бөгөөд энэ нь Гарчиг нэртэй энэ хуудасны бусад бүх зүйлийн дээр гарчгийг тавьдаг; Дараа нь Гарчиг доор догол мөр үүсгэдэг desc="{data.desc}"; эцэст нь info={"Гарчиг":"{өгөгдөл" байна.
//  }", "Тодорхойлолт":"{өгөгдөл."
//  ."}"}
//  Энэ нь Тодорхойлолтын доор хоёр догол мөр үүсгэдэг
//  Код нь "гарчиг" болон "dec" текстийг үүсгэхэд ашиглагддаг.
//  Код нь өгөгдсөн data.img-тэй зураг үүсгэх бөгөөд энэ нь хуудасны "зохиогч" хэсэгт харагдах болно.